## minikube installation.
## minikube is local Kubernetes, focusing on making it easy to learn and develop for Kubernetes.
## All you need is Docker (or similarly compatible) container or a Virtual Machine environment, and Kubernetes is a single command away: minikube start
## requirements.
##  2 CPUs or more
##  2GB of free memory
##  20GB of free disk space
##  Internet connection
## Container or virtual machine manager, such as: Docker, QEMU, Hyperkit, Hyper-V, KVM, Parallels, Podman, VirtualBox, or VMware Fusion/Workstation

## Installation
## To install the latest minikube stable release on x86-64 Windows using .exe download:
## Download and run the installer for the latest release.


New-Item -Path 'c:\' -Name 'minikube' -ItemType Directory -Force
Invoke-WebRequest -OutFile 'c:\minikube\minikube.exe' -Uri 'https://github.com/kubernetes/minikube/releases/latest/download/minikube-windows-amd64.exe' -UseBasicParsing

## Add the minikube.exe binary to your PATH.

$oldPath = [Environment]::GetEnvironmentVariable('Path', [EnvironmentVariableTarget]::Machine)
if ($oldPath.Split(';') -inotcontains 'C:\minikube'){
  [Environment]::SetEnvironmentVariable('Path', $('{0};C:\minikube' -f $oldPath), [EnvironmentVariableTarget]::Machine)
}




## Start your cluster

minikube start

## Interact with your cluster

kubectl get po -A
minikube kubectl -- get po -A

## Initially, some services such as the storage-provisioner, may not yet be in a Running state. This is a normal condition during cluster bring-up, and will resolve itself momentarily. For additional insight into your cluster state, minikube bundles the Kubernetes Dashboard, allowing you to get easily acclimated to your new environment:

minikube dashboard


## Deploy applications
## Service
## Create a sample deployment and expose it on port 8080:

kubectl create deployment hello-minikube --image=kicbase/echo-server:1.0
kubectl expose deployment hello-minikube --type=NodePort --port=8080


## It may take a moment, but your deployment will soon show up when you run:

kubectl get services hello-minikube

## The easiest way to access this service is to let minikube launch a web browser for you:

minikube service hello-minikube

## Alternatively, use kubectl to forward the port:

kubectl port-forward service/hello-minikube 7080:8080  

## Your application is now available at http://localhost:7080/.

## Load Balancer.

kubectl create deployment balanced --image=kicbase/echo-server:1.0
kubectl expose deployment balanced --type=LoadBalancer --port=8080


## In another window, start the tunnel to create a routable IP for the ‘balanced’ deployment:

minikube tunnel
To find the routable IP, run this command and examine the EXTERNAL-IP column:

kubectl get services balanced
Your deployment is now available at <EXTERNAL-IP>:8080
## Manage your cluster
Pause Kubernetes without impacting deployed applications:

minikube pause
Unpause a paused instance:

minikube unpause
Halt the cluster:

minikube stop
Change the default memory limit (requires a restart):

minikube config set memory 9001
Browse the catalog of easily installed Kubernetes services:

minikube addons list
Create a second cluster running an older Kubernetes release:

minikube start -p aged --kubernetes-version=v1.16.1
Delete all of the minikube clusters:

minikube delete --all